Traceback (most recent call last):
  File "/home/petri/venv/python3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
X= boston['data']
y= boston['target']
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.25, shuffle=True)
model = make_pipeline(StandardScaler(),
                    SGDRegressor(max_iter=1000, tol=1e-4, loss='squared_error', alpha=0.2))
%time model.fit(X_train, y_train)
print("Number of interations needed:", model[1].n_iter_)

# Cross_val_score and score are coefficient of determinations, R^2
RsquaredTR=model.score(X_train, y_train)
RSquaredTE=model.score(X_test, y_test)
RSquaredTA=model.score(X,y)

sns.regplot(x=y,y=model.predict(X), line_kws={"color": "red"})
RsquaredCV=cross_val_score(model, X, y, cv=5).mean()

plt.xlabel('True price')
plt.ylabel('Predicted price')
plt.title('Comparison of two-feature model, $R^2$=%3.2f' % RsquaredCV)

print("")
print("Training score.....", RsquaredTR)
print("CV score...........", RsquaredCV)
print("Testing score......", RSquaredTE)
print("All samples score..", RSquaredTA)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_1113776/1087580379.py[0m in [0;36m<module>[0;34m[0m
[1;32m      3[0m [0mX_train[0m[0;34m,[0m [0mX_test[0m[0;34m,[0m [0my_train[0m[0;34m,[0m [0my_test[0m [0;34m=[0m [0mtrain_test_split[0m[0;34m([0m[0mX[0m[0;34m,[0m[0my[0m[0;34m,[0m [0mtest_size[0m[0;34m=[0m[0;36m0.25[0m[0;34m,[0m [0mshuffle[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m model = make_pipeline(StandardScaler(),
[0;32m----> 5[0;31m                     SGDRegressor(max_iter=1000, tol=1e-4, loss='squared_error', alpha=0.2))
[0m[1;32m      6[0m [0mget_ipython[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mrun_line_magic[0m[0;34m([0m[0;34m'time'[0m[0;34m,[0m [0;34m'model.fit(X_train, y_train)'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      7[0m [0mprint[0m[0;34m([0m[0;34m"Number of interations needed:"[0m[0;34m,[0m [0mmodel[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m.[0m[0mn_iter_[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/venv/python3/lib/python3.9/site-packages/sklearn/utils/validation.py[0m in [0;36minner_f[0;34m(*args, **kwargs)[0m
[1;32m     61[0m             [0mextra_args[0m [0;34m=[0m [0mlen[0m[0;34m([0m[0margs[0m[0;34m)[0m [0;34m-[0m [0mlen[0m[0;34m([0m[0mall_args[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     62[0m             [0;32mif[0m [0mextra_args[0m [0;34m<=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 63[0;31m                 [0;32mreturn[0m [0mf[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     64[0m [0;34m[0m[0m
[1;32m     65[0m             [0;31m# extra_args > 0[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/venv/python3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py[0m in [0;36m__init__[0;34m(self, loss, penalty, alpha, l1_ratio, fit_intercept, max_iter, tol, shuffle, verbose, epsilon, random_state, learning_rate, eta0, power_t, early_stopping, validation_fraction, n_iter_no_change, warm_start, average)[0m
[1;32m   1590[0m                  [0mpower_t[0m[0;34m=[0m[0;36m0.25[0m[0;34m,[0m [0mearly_stopping[0m[0;34m=[0m[0;32mFalse[0m[0;34m,[0m [0mvalidation_fraction[0m[0;34m=[0m[0;36m0.1[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1591[0m                  n_iter_no_change=5, warm_start=False, average=False):
[0;32m-> 1592[0;31m         super().__init__(
[0m[1;32m   1593[0m             [0mloss[0m[0;34m=[0m[0mloss[0m[0;34m,[0m [0mpenalty[0m[0;34m=[0m[0mpenalty[0m[0;34m,[0m [0malpha[0m[0;34m=[0m[0malpha[0m[0;34m,[0m [0ml1_ratio[0m[0;34m=[0m[0ml1_ratio[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1594[0m             [0mfit_intercept[0m[0;34m=[0m[0mfit_intercept[0m[0;34m,[0m [0mmax_iter[0m[0;34m=[0m[0mmax_iter[0m[0;34m,[0m [0mtol[0m[0;34m=[0m[0mtol[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/venv/python3/lib/python3.9/site-packages/sklearn/utils/validation.py[0m in [0;36minner_f[0;34m(*args, **kwargs)[0m
[1;32m     61[0m             [0mextra_args[0m [0;34m=[0m [0mlen[0m[0;34m([0m[0margs[0m[0;34m)[0m [0;34m-[0m [0mlen[0m[0;34m([0m[0mall_args[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     62[0m             [0;32mif[0m [0mextra_args[0m [0;34m<=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 63[0;31m                 [0;32mreturn[0m [0mf[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     64[0m [0;34m[0m[0m
[1;32m     65[0m             [0;31m# extra_args > 0[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/venv/python3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py[0m in [0;36m__init__[0;34m(self, loss, penalty, alpha, l1_ratio, fit_intercept, max_iter, tol, shuffle, verbose, epsilon, random_state, learning_rate, eta0, power_t, early_stopping, validation_fraction, n_iter_no_change, warm_start, average)[0m
[1;32m   1132[0m                  [0mpower_t[0m[0;34m=[0m[0;36m0.25[0m[0;34m,[0m [0mearly_stopping[0m[0;34m=[0m[0;32mFalse[0m[0;34m,[0m [0mvalidation_fraction[0m[0;34m=[0m[0;36m0.1[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1133[0m                  n_iter_no_change=5, warm_start=False, average=False):
[0;32m-> 1134[0;31m         super().__init__(
[0m[1;32m   1135[0m             [0mloss[0m[0;34m=[0m[0mloss[0m[0;34m,[0m [0mpenalty[0m[0;34m=[0m[0mpenalty[0m[0;34m,[0m [0malpha[0m[0;34m=[0m[0malpha[0m[0;34m,[0m [0ml1_ratio[0m[0;34m=[0m[0ml1_ratio[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1136[0m             [0mfit_intercept[0m[0;34m=[0m[0mfit_intercept[0m[0;34m,[0m [0mmax_iter[0m[0;34m=[0m[0mmax_iter[0m[0;34m,[0m [0mtol[0m[0;34m=[0m[0mtol[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/venv/python3/lib/python3.9/site-packages/sklearn/utils/validation.py[0m in [0;36minner_f[0;34m(*args, **kwargs)[0m
[1;32m     61[0m             [0mextra_args[0m [0;34m=[0m [0mlen[0m[0;34m([0m[0margs[0m[0;34m)[0m [0;34m-[0m [0mlen[0m[0;34m([0m[0mall_args[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     62[0m             [0;32mif[0m [0mextra_args[0m [0;34m<=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 63[0;31m                 [0;32mreturn[0m [0mf[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     64[0m [0;34m[0m[0m
[1;32m     65[0m             [0;31m# extra_args > 0[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/venv/python3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py[0m in [0;36m__init__[0;34m(self, loss, penalty, alpha, C, l1_ratio, fit_intercept, max_iter, tol, shuffle, verbose, epsilon, random_state, learning_rate, eta0, power_t, early_stopping, validation_fraction, n_iter_no_change, warm_start, average)[0m
[1;32m    100[0m         [0;31m# current tests expect init to do parameter validation[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    101[0m         [0;31m# but we are not allowed to set attributes[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 102[0;31m         [0mself[0m[0;34m.[0m[0m_validate_params[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    103[0m [0;34m[0m[0m
[1;32m    104[0m     [0;32mdef[0m [0mset_params[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/venv/python3/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py[0m in [0;36m_validate_params[0;34m(self, for_partial_fit)[0m
[1;32m    154[0m [0;34m[0m[0m
[1;32m    155[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mloss[0m [0;32mnot[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mloss_functions[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 156[0;31m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"The loss %s is not supported. "[0m [0;34m%[0m [0mself[0m[0;34m.[0m[0mloss[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    157[0m [0;34m[0m[0m
[1;32m    158[0m     [0;32mdef[0m [0m_get_loss_function[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mloss[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: The loss squared_error is not supported. 
ValueError: The loss squared_error is not supported. 

